
using Models.Data;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Repositories
{
    public class FoodItemRepository : IRepositoryBase<FoodItemVM>
    {
        private AppDbContext _context;
        public FoodItemRepository(AppDbContext context)
        {
            _context = context;
        }
        public int Add(FoodItemVM foodItem)
        {
            var _foodItem = new FoodItem()
            {
                FoodCode = foodItem.FoodCode,
                FoodName = foodItem.FoodName,
                FoodDescription = foodItem.FoodDescription,
                FoodPrice = foodItem.FoodPrice,
                AddedDate = DateTime.Now,
                ImageURL = foodItem.ImageURL,
            };

            _context.FoodItems.Add(_foodItem);
            object value = _context.SaveChanges();

            // After SaveChanges, _foodItem will have the ID generated by the database.
            int addedItemId = _foodItem.Id;

            return addedItemId;
        }


        public int DeleteById(int id)
        {
            throw new NotImplementedException();
        }

        public IEnumerable<FoodItemVM> GetAll()
        {
            var allFoodItems = _context.FoodItems.ToList();
            var foodItemVMs = allFoodItems.Select(foodItem => new FoodItemVM
            {
                // Map properties from FoodItem to FoodItemVM here
                Id = foodItem.Id,
                FoodName = foodItem.FoodName,
                FoodCode= foodItem.FoodCode,
                FoodDescription= foodItem.FoodDescription,
                FoodPrice= foodItem.FoodPrice,
                AddedDate = foodItem.AddedDate,
                ImageURL = foodItem.ImageURL,
            });

            return foodItemVMs;
        }

        public FoodItemVM GetById(int id)
        {
            throw new NotImplementedException();
        }

        public int UpdateById(FoodItemVM entity)
        {
            throw new NotImplementedException();
        }
    }
}
